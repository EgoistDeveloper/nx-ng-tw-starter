resources:
  - repo: self

trigger:
  branches:
    include:
      - master
  paths:
    exclude:
      - .azure/*
      - .github/*
      - .vscode/*
      - tools/*
      - LICENSE
      - README.md
      - /**/README.md
      - .*

pr: none

jobs:
  ##
  # Main Building pipeline for branch master (which is used to build and deploy PRODUCTION distro).
  # It does the following:
  # - executes unit tests, and generates a coverage report;
  # - builds client and server applications in production mode;
  # - deploys built client and server application to Firebase.
  # Note on environment variables:
  # - all envitonment variables should be defined in Azure DevOps UI.
  ##
  - job: Building_pipeline
    timeoutInMinutes: 60
    cancelTimeoutInMinutes: 10

    pool:
      vmImage: 'ubuntu-16.04'

    steps:
      - task: NodeTool@0
        displayName: 'Use specific node version'
        inputs:
          versionSpec: '14.8.0'

      # TODO: deploy api
      - script: |
          npm i -g npm@6.14.8
          npm i -g typescript
          npm i -g @angular/cli
          npm i -g @compodoc/compodoc
          npm i -g @nrwl/schematics
          npm i -g firebase-tools
          npm i -g yarn
          bash tools/shell/install.sh project
          if [ $? -ne 0 ]; then
            exit 1
          fi
          bash tools/shell/test.sh single-run all
          if [ $? -ne 0 ]; then
            exit 1
          fi
          bash tools/shell/e2e.sh all headless
          if [ $? -ne 0 ]; then
            exit 1
          fi
          bash tools/shell/build.sh prod all
          if [ $? -ne 0 ]; then
            exit 1
          fi
          bash tools/shell/firebase-deploy.sh $FIREBASE_DEPLOY_TOKEN client
          if [ $? -ne 0 ]; then
            exit 1
          fi
          bash tools/shell/firebase-deploy.sh $FIREBASE_DEPLOY_TOKEN documentation
          if [ $? -ne 0 ]; then
            exit 1
          fi
        env:
          FIREBASE_DEPLOY_TOKEN: $(firebaseDeployToken)

      - task: ArchiveFiles@2
        displayName: 'Archive files'
        inputs:
          rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
          includeRootFolder: false

      - task: PublishBuildArtifacts@1
        displayName: 'Publish artifacts: drop'
